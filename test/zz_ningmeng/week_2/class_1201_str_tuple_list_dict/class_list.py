# -*- coding: utf-8 -*-
# @Time    : 2018/12/4 20:38
# @Author  : lemon_huahua
# @Email   : 204893985@qq.com
# @File    : class_list.py

#列表 关键字 list  符号 []   所有的符号都是英文状态下的符号
#1:特征
#>1.1.中括号括起来的数据，都是列表，看类型 type
#>1.2.空列表t=[]
#>1.3.列表里面可以包含各种类型的数据 整数 浮点数 字符串 布尔值 True False 元组 列表
#>1.4.元素和元素之间是用逗号给开的,看元素的长度 len
#>1.5.取值方式：与字符串/元组一样  根据索引取值  可以切片取值
#取单个值的方式 列表名[索引值]  索引值从0开始数
#嵌套取值 怎么取   剥洋葱 一片一片的往里面剥开
# t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
# print(t[4][2])
# print(t[-2][2])
# print(t[-2][-2])
# print(t[5][2])
# print(t[-1][-2])

#切片：同字符串、元组  列表名[索引开始值:索引结束值:步长]
#取左不取右
t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
##请把最后一个嵌套在t列表里面的子列表的索引为偶数的值打印出来
# print(t[-1][::2])
# print(t[-1][0:5:2])

#>1.6.列表他是有序数据 但是支持增删改
# t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
# print(t.index(2))
# print(t.count(True))
# t.clear()
# print(t)#函数的时候

#2：用法 和 场景
#用在什么场景下呢？---心随我动
# t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]

#增加
#1：加在尾部 列表名.append(value)  一次只能增加一个元素
# t.append('爱飞的鱼')
# t.append(['向阳同学'])
# print(t)

#2：在指定的索引位置加元素 列表名.insert(i,value)  一次只能增加一个元素
# t.insert(0,'花果山来的桃子同学')

#3：添加列表  列表名.extend(第二个列表名)  合并列表
# a=['皮的要死的海绵','磐石','melody','ing','如意']
# t.extend(a)
# print(t+a)

# t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
#删除
#1:删除最后一个元素 列表名.pop()
# t.pop()

#2:删除指定索引位置的一个元素 列表名.pop(i)
# t.pop(0)


# reverse()函数：反向列表中元素
# t.reverse()
# print(t)
# sort()函数：对原列表进行排序  数字
# a=[9,11,567,89,1,4,3,2,7,6,8]
# a.sort(reverse=True)
# print(a)

#修改元素的值  重新赋值
# t[-1][-1]='shadow'
# print(t)

# t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
# #列表可以修改 和元组不可以修改 是绝对的吗？---他不是绝对的
# t[4]='柠檬茶'
# print(t)

# a=(2,0.0089,'1',True,(1,2,3,'hello'),2,3,4,5,['不将就','sunny','土豆','@@@'])
# a[-1][-1]='爱飞的鱼'
# print(a)

#为啥有的数据可以直接输出 有的数据不需要输出？---留一个悬念。
t=[2,0.0089,'1',True,(1,2,3,'hello'),['python13','lemon','土豆','西红柿']]
# print(t.index(2))
# t.reverse()
# print(t)

# print(t.pop())# 函数 以及函数的返回值！


#字典
